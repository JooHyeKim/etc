class Solution(object):
    ## dp 방법
    ## s1과 s2가 순서대로 끼워넣기가 되기 때문에 dp로 한칸 전의 상태만 파악하면 된다.
    ## i =0, j=0인 경우를 따로 넣어 행렬을 벗어나는 오류에 대비
    ## 최종적으로 마지막 값만 확인하면 된다.
    
    def isInterleave(self, s1, s2, s3):
        row = len(s1)+1
        col = len(s2)+1
        if row + col -2 != len(s3):
            return False
        
        check = [False] * row
        for i in range(row):
            check[i] = [False] * col
        
        check[0][0] = True
        
        for i in range(row):
            for j in range(col):
                if i == 0 and j ==0:
                    continue     
                elif i == 0:
                    check[i][j] = check[i][j-1] and s2[j-1] ==s3[i+j-1]
                elif j == 0:
                    check[i][j] = check[i-1][j] and s1[i-1] ==s3[i+j-1]        
                else:
                    check[i][j] = ((check[i-1][j] and s1[i-1] == s3[i+j-1]) or (check[i][j-1] and s2[j-1] == s3[i+j-1]))

        return check[-1][-1]
